{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 3,
    "pending": 1,
    "failures": 0,
    "start": "2021-11-17T18:13:23.204Z",
    "end": "2021-11-17T18:13:32.063Z",
    "duration": 8859,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 25,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1979d30c-3b52-4562-a4f2-f8c23acaf897",
      "title": "",
      "fullFile": "cypress/integration/firstTest.spec.js",
      "file": "cypress/integration/firstTest.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6b901a4-ff27-41f6-b026-307dfcf6eaac",
          "title": "Test with backend",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify correct request and response",
              "fullTitle": "Test with backend verify correct request and response",
              "timedOut": null,
              "duration": 5741,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.intercept('POST', '**/articles').as('postArticles'); // cy.route('POST','https://api.realworld.io/api/articles/').as('postArticles')\n// cy.intercept('POST','https://api.realworld.io/api/articles/').as('GetUser')\ncy.contains('New Article').click();\ncy.get('[formcontrolname=\"title\"]').type('This is an Article');\ncy.get('[formcontrolname=\"description\"]').type('This is the description');\ncy.get('[formcontrolname=\"body\"]').type('This is the body of the Article');\ncy.get('[placeholder=\"Enter tags\"]').type('tag1');\ncy.contains('Publish Article').click();\ncy.wait('@postArticles');\ncy.get('@postArticles').then(xhr => {\n  console.log(xhr);\n  expect(xhr.response.statusCode).to.equal(307);\n  expect(xhr.request.body.article.body).to.equal('This is the body of the Article'); // expect(xhr.response.body.article.description).to.equal('This is the description')\n});",
              "err": {},
              "uuid": "53c56d1a-7e7d-4249-9941-2bc648b52026",
              "parentUUID": "e6b901a4-ff27-41f6-b026-307dfcf6eaac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should give tags with routing object",
              "fullTitle": "Test with backend should give tags with routing object",
              "timedOut": null,
              "duration": 1524,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('div .tag-list').should('contain', 'cypress').and('contain', 'automation').and('contain', 'testing');",
              "err": {},
              "uuid": "03b9d0f5-4265-4d48-9273-876db68ce837",
              "parentUUID": "e6b901a4-ff27-41f6-b026-307dfcf6eaac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify global feed likes count",
              "fullTitle": "Test with backend verify global feed likes count",
              "timedOut": null,
              "duration": 1533,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cy.intercept('GET','https://api.realworld.io/api/articles/feed?limit=10&offset=0',{\"articles\":[],\"articlesCount\":0}) \ncy.intercept('GET', '**/articles/feed*', {\n  \"articles\": [],\n  \"articlesCount\": 0\n}); // cy.intercept('GET','https://api.realworld.io/api/articles?limit=10&offset=0',{fixture:'articles.json'})              \ncy.intercept('GET', '**/articles*', {\n  fixture: 'articles.json'\n});\ncy.contains('Global Fee').click();\ncy.get('app-article-list button').then(listOfButtons => {\n  expect(listOfButtons[0]).to.contain('1');\n  expect(listOfButtons[1]).to.contain('5');\n});\ncy.fixture('articles').then(file => {\n  const articleLink = file.articles[1].slug; // cy.intercept('POSt','https://api.realworld.io/api/articles/articleLink/favorite',file)     \n  cy.intercept('POSt', '**/articles/' + articleLink + '/favorite', file);\n});\ncy.get('app-article-list button').eq(1).click().should('contain', '6');",
              "err": {},
              "uuid": "7c37c03b-ce62-4d63-a0fc-f7e69c9ad198",
              "parentUUID": "e6b901a4-ff27-41f6-b026-307dfcf6eaac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete a new article in the Global Fee",
              "fullTitle": "Test with backend delete a new article in the Global Fee",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "11e1a779-482b-4d9e-89b9-28197b57b36e",
              "parentUUID": "e6b901a4-ff27-41f6-b026-307dfcf6eaac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53c56d1a-7e7d-4249-9941-2bc648b52026",
            "03b9d0f5-4265-4d48-9273-876db68ce837",
            "7c37c03b-ce62-4d63-a0fc-f7e69c9ad198"
          ],
          "failures": [],
          "pending": [
            "11e1a779-482b-4d9e-89b9-28197b57b36e"
          ],
          "skipped": [],
          "duration": 8798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}